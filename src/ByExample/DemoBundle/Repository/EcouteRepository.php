<?php

namespace ByExample\DemoBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\DemoBundle\Entity\Ecoute;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * EcouteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EcouteRepository extends EntityRepository{

	public function findEcoutesByUser($id_user, $limit){
		$query=$this->_em->createQuery('SELECT partial e.{id,date, typeecoute}, partial i.{id,url,titre,note,duree,typeitem,nbvues,date,urlCover,urlPoster}, partial a.{id,nom}, partial alb.{id, titre}
	    FROM ByExampleDemoBundle:Ecoute e
	    LEFT  JOIN e.idsession s
	    LEFT  JOIN e.iditem i
	    LEFT  JOIN i.idartiste a
	    LEFT JOIN i.idalbum alb
        WHERE s.idutilisateur = :user
        ORDER BY e.id DESC')
	    ->setParameter("user",$id_user)
	    ->setMaxResults($limit);
	    $items=$query->getResult(Query::HYDRATE_ARRAY);
	    return $items;
	}


	public function addEcoute($session, $item, $typeEcoute){
		$ecoute = new Ecoute();
		$ecoute->setDate(new DateTime());

		
		$ecoute->setTypeecoute($typeEcoute);
		$ecoute->setIditem($item);

		$this->_em->persist($ecoute);
		$this->_em->flush();

		$idEcoute = $ecoute->getId();
		//$idSession = $session->getId();
        $conn = $this->_em->getConnection();
        $conn->insert("sessionecoute", array("idEcoute"=>$idEcoute, "idSession"=>$session->getId()));

	    return $idEcoute;
	}

	public function findLastEcouteByUser($id_user){
		$query=$this->_em->createQuery('SELECT e
	    FROM ByExampleDemoBundle:Ecoute e
	    LEFT  JOIN e.idsession s
        WHERE s.idutilisateur = :user
        ORDER BY e.id DESC')
	    ->setParameter("user",$id_user)
	    ->setMaxResults(1);
	    $items=$query->getResult(Query::HYDRATE_OBJECT);
	    return $items[0];
	}

	public function findLastEcouteBySession($id_session){
		$query=$this->_em->createQuery('SELECT e
	    FROM ByExampleDemoBundle:Ecoute e
	    LEFT  JOIN e.idsession s
        WHERE s.id = :session
        ORDER BY e.id DESC')
	    ->setParameter("session",$id_session)
	    ->setMaxResults(1);
	    $items=$query->getResult(Query::HYDRATE_OBJECT);
	    return $items[0];
	}

	public function findLastEcouteLightBySession($id_session){
		$query=$this->_em->createQuery('SELECT partial e.{id, iditem}
	    FROM ByExampleDemoBundle:Ecoute e
	    LEFT  JOIN e.idsession s
        WHERE s.id = :session
        ORDER BY e.id DESC')
	    ->setParameter("session",$id_session)
	    ->setMaxResults(1);
	    $items=$query->getResult(Query::HYDRATE_OBJECT);
	    return $items[0];
	}
}