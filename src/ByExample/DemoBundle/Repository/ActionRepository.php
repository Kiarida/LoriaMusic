<?php

namespace ByExample\DemoBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\DemoBundle\Entity\Actions;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * ActionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ActionRepository extends EntityRepository{

	public function addAction($typeAction, $item, $idUtilisateur){
		$action = new Actions();
		$action->setIditem($item);
		$action->setIdtypeactions($typeAction);
		$repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
                $utilisateur = $repository->findOneById($idUtilisateur);
		$action->setIdutilisateur($utilisateur);


		$this->_em->persist($action);
		$this->_em->flush();

		$idAction = $action->getId();

	    return $idAction;
	}


	public function findAction($typeAction, $idItem, $idUtilisateur){
		
                $query = $this->_em->createQuery(
                'SELECT a.id
                FROM ByExampleDemoBundle:Actions a 
                WHERE a.iditem = :item
                AND a.idutilisateur = :utilisateur
                AND a.idtypeaction = :action
                ')
                ->setParameter('item', $idItem)
                ->setParameter('utilisateur', $idUtilisateur)
                ->setParameter('action', $typeAction);
                $action = $query->getResult();
                return $action[0]["id"];
	}



	public function getTypesActions($idItem, $idUtilisateur){
		$query = $this->_em->createQuery(
                'SELECT IDENTITY(a.idtypeaction)
                FROM ByExampleDemoBundle:Actions a 
                WHERE a.iditem = :item
                AND a.idutilisateur = :utilisateur
                ')
                ->setParameter('item', $idItem)
                ->setParameter('utilisateur', $idUtilisateur);
                $types = $query->getResult();
                return $types;
	}


}
