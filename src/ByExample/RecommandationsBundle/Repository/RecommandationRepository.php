<?php

namespace ByExample\RecommandationsBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\RecommandationsBundle\Entity\Recommandation;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * RecommandationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecommandationRepository extends EntityRepository{

	public function addRecommandation($idalgo, $idutil, $item){

                         $repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
                        $user = $repository->findOneById($idutil);
                        $repositoryItem = $this->_em->getRepository('ByExampleDemoBundle:Item');
                         $repositoryAlgo = $this->_em->getRepository('ByExampleRecommandationsBundle:Algorithm');
                        $algo = $repositoryAlgo->findOneById($idalgo);
                        $recom = new Recommandation();
                        $recom->setDate(new DateTime());
                        $recom->setIdalgorithm($idalgo);
                        $recom->setIdutilisateur($user);
                        $recom->setIditem($repositoryItem->findOneById($item));

                        $this->_em->persist($recom);
                        $this->_em->flush();
                        $idRecom = $recom->getId();
                        return $idRecom;

       

	    
	}

        public function searchRecommandation($idalgo, $idutilisateur, $iditem){

        	$query = $this->_em->createQuery(
                        'SELECT r
                        FROM ByExampleRecommandationsBundle:Recommandation r
                        WHERE r.idalgorithm = :idalgo
                        AND r.idutilisateur = :idutil
                        AND r.iditem = :iditem
                        ')->setParameters(array('idalgo'=>$idalgo, 'idutil'=>$idutilisateur, 'iditem'=>$iditem));

                $reco = $query->getResult(Query::HYDRATE_ARRAY);

                return $reco;
        }

        public function searchPrecalculated($idalgo, $idutilisateur){

            $query = $this->_em->createQuery(
                     'SELECT r, i
                        FROM ByExampleRecommandationsBundle:Recommandation r
                        LEFT JOIN r.iditem i
                        WHERE r.idalgorithm = :idalgo
                        AND r.idutilisateur = :idutil
                        AND r.date = (SELECT MAX (rec.date) FROM ByExampleRecommandationsBundle:Recommandation rec 
                             WHERE rec.idalgorithm = :idalgo
                            AND rec.idutilisateur = :idutil)
                        ')->setParameters(array('idalgo'=>$idalgo, 'idutil'=>$idutilisateur));

                $reco = $query->getResult(Query::HYDRATE_ARRAY);

                return $reco;
        }





}
