<?php

namespace ByExample\RecommandationsBundle\Repository;

use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\EntityRepository;
use ByExample\RecommandationsBundle\Entity\Algorithm;
use Doctrine\ORM\Query;
use \DateTime;

/**
 * AlgorithmRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AlgorithmRepository extends EntityRepository{

	public function addAlgorithmGroup($idAlgo, $position, $idUtilisateur){
        $repositoryAlgo = $this->_em->getRepository('ByExampleRecommandationsBundle:Algorithm');
        $repository = $this->_em->getRepository('ByExampleDemoBundle:Utilisateur');
        $algo = $repositoryAlgo->findOneById($idAlgo);
        $user = $repository->findOneById($idUtilisateur);
		$algorithm = new AlgorithmUser();
		$algorithm->setIdAlgorithm($algo);
		$algorithm->setIdUtilisateur($user);
		$algorithm->setPosition($position);
		$this->_em->persist($algorithm);
		$this->_em->flush();

		$idAlgo = $algorithm->getId();

	    return $idAlgo;
	}

	public function findAllAlgo(){
		$query = $this->_em->createQuery(
			'SELECT a
			FROM ByExampleRecommandationsBundle:Algorithm a
			');
		$algos = $query->getResult(Query::HYDRATE_ARRAY);
		return $algos;
	}


	public function updateAlgo($id, $label,$color){
		$algo = $this->findOneById($id);
		$algo->setLabel($label);
		$algo->setColor($color);
		$this->_em->persist($algo);
		$this->_em->flush();
		return $algo->getId();
	}



}
