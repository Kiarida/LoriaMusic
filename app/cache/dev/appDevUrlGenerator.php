<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'nelmio_api_doc_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Nelmio\\ApiDocBundle\\Controller\\ApiDocController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'byexample_demo_securityrest_post_token_create' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SecurityController::postTokenCreateAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/security/tokens/creates',    ),  ),  4 =>   array (  ),),
        'byexample_demo_securityrest_get_token_destroy' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SecurityController::getTokenDestroyAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/security/token/destroy',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_user' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getUserAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_connected_user' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getConnectedUserAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/connected',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_put_note_item' => array (  0 =>   array (    0 => 'id',    1 => 'id_item',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::putNoteItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id_item',    ),    2 =>     array (      0 => 'text',      1 => '/note/item',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_note_item' => array (  0 =>   array (    0 => 'iduser',    1 => 'id_item',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getNoteItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id_item',    ),    2 =>     array (      0 => 'text',      1 => '/note/item',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iduser',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_put_playlist' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::putPlaylistAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id_playlist',    ),    2 =>     array (      0 => 'text',      1 => '/playlist',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_post_playlist' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::postPlaylistAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/playlist',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_playlist' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getPlaylistAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/playlist',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_post_users' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::postUsersAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_put_user' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::putUserAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_put_note_artiste' => array (  0 =>   array (    0 => 'id',    1 => 'idArtiste',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::putNoteArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtiste',    ),    2 =>     array (      0 => 'text',      1 => '/note/artiste',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_note_artiste' => array (  0 =>   array (    0 => 'iduser',    1 => 'idArtiste',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getNoteArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtiste',    ),    2 =>     array (      0 => 'text',      1 => '/note/artiste',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iduser',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_post_friend' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::postFriendAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/friends',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_delete_friend' => array (  0 =>   array (    0 => 'id',    1 => 'idfriend',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::deleteFriendAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idfriend',    ),    2 =>     array (      0 => 'text',      1 => '/friends',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_friends' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getFriendsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/friends',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_item_by_action' => array (  0 =>   array (    0 => 'id',    1 => 'id_action',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getItemByActionAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_action',    ),    3 =>     array (      0 => 'text',      1 => '/action',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_get_token' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::getTokenAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/rhapsody/new',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_userrest_put_refresh_token' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\UserRestController::putRefreshTokenAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/rhapsody/refresh',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_genres_get_genres' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\GenreRestController::getGenresAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/genres',    ),  ),  4 =>   array (  ),),
        'byexample_genres_get_search_genres' => array (  0 =>   array (    0 => 'key',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\GenreRestController::getSearchGenresAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'key',    ),    2 =>     array (      0 => 'text',      1 => '/genres',    ),  ),  4 =>   array (  ),),
        'byexample_items_update_view_item' => array (  0 =>   array (    0 => 'idItem',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::updateViewItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/vues/',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idItem',    ),    3 =>     array (      0 => 'text',      1 => '/items',    ),  ),  4 =>   array (  ),),
        'byexample_items_search_item_grooveshark' => array (  0 =>   array (    0 => 'key',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::searchItemGroovesharkAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'key',    ),    2 =>     array (      0 => 'text',      1 => '/items/grooveshark/search',    ),  ),  4 =>   array (  ),),
        'byexample_items_add_item_artiste' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::addItemArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_item' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/items',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_items_search' => array (  0 =>   array (    0 => 'key',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemsSearchAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'key',    ),    2 =>     array (      0 => 'text',      1 => '/items/search',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_items_popular' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemsPopularAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items/get/popular',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_item_tags' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemTagsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/items',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_item_genre' => array (  0 =>   array (    0 => 'idGenre',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemGenreAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idGenre',    ),    2 =>     array (      0 => 'text',      1 => '/items/genre',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_item_artiste' => array (  0 =>   array (    0 => 'idArtiste',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtiste',    ),    2 =>     array (      0 => 'text',      1 => '/items/artiste',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_item_echonest' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getItemEchonestAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items/echonest',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_genres_item' => array (  0 =>   array (    0 => 'idArtist',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getGenresItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtist',    ),    2 =>     array (      0 => 'text',      1 => '/items/getgenres',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_album_by_artiste' => array (  0 =>   array (    0 => 'idArtiste',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getAlbumByArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtiste',    ),    2 =>     array (      0 => 'text',      1 => '/items/albums',    ),  ),  4 =>   array (  ),),
        'byexample_items_put_note_tag_item' => array (  0 =>   array (    0 => 'iduser',    1 => 'idItem',    2 => 'idTag',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::putNoteTagItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idTag',    ),    2 =>     array (      0 => 'text',      1 => '/tags',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idItem',    ),    4 =>     array (      0 => 'text',      1 => '/items',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iduser',    ),    6 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_note_tag_item' => array (  0 =>   array (    0 => 'iduser',    1 => 'idItem',    2 => 'idTag',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getNoteTagItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idTag',    ),    2 =>     array (      0 => 'text',      1 => '/tags',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idItem',    ),    4 =>     array (      0 => 'text',      1 => '/items',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iduser',    ),    6 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_search_xbox' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getSearchXboxAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items/xbox/search',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_xbox' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getXboxAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items/xbox/streaming',    ),  ),  4 =>   array (  ),),
        'byexample_items_post_xbox_authorization' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::postXboxAuthorizationAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items/xbox/streaming',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_xbox_streaming' => array (  0 =>   array (    0 => 'iditem',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ItemRestController::getXboxStreamingAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'iditem',    ),    2 =>     array (      0 => 'text',      1 => '/items/xbox/streaming',    ),  ),  4 =>   array (  ),),
        'byexample_artistes_get_artiste' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ArtisteRestController::getArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/artistes',    ),  ),  4 =>   array (  ),),
        'byexample_artistes_get_artistes' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ArtisteRestController::getArtistesAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/artistes',    ),  ),  4 =>   array (  ),),
        'byexample_artistes_get_artistes_search' => array (  0 =>   array (    0 => 'keyword',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ArtisteRestController::getArtistesSearchAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'keyword',    ),    2 =>     array (      0 => 'text',      1 => '/artistes/search',    ),  ),  4 =>   array (  ),),
        'byexample_items_update_token_index_item' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::updateIndexItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    3 =>     array (      0 => 'text',      1 => '/playlist',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_token_playlists' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::getPlaylistsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id_playlist',    ),    2 =>     array (      0 => 'text',      1 => '/playlist',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_token_playlist_tags' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::getPlaylistTagsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    3 =>     array (      0 => 'text',      1 => '/playlists',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_token_playlist_tag' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::getPlaylistTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    3 =>     array (      0 => 'text',      1 => '/playlists',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_delete_token_playlist_tag' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => 'idtag',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::deletePlaylistTagAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idtag',    ),    2 =>     array (      0 => 'text',      1 => '/tags',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    4 =>     array (      0 => 'text',      1 => '/playlists',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    6 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_delete_token_playlist' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::deletePlaylistAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'id_playlist',    ),    2 =>     array (      0 => 'text',      1 => '/playlist',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_post_token_playlist_item' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::postPlaylistItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/items',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    3 =>     array (      0 => 'text',      1 => '/playlist',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_delete_token_playlist_item' => array (  0 =>   array (    0 => 'id',    1 => 'id_playlist',    2 => 'iditem',    3 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\PlaylistRestController::deletePlaylistItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'iditem',    ),    2 =>     array (      0 => 'text',      1 => '/items',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_playlist',    ),    4 =>     array (      0 => 'text',      1 => '/playlist',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    6 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_getitemsbysession' => array (  0 =>   array (    0 => 'id',    1 => 'id_session',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::getItemsBySessionAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_session',    ),    1 =>     array (      0 => 'text',      1 => '/sessions',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_getsessions' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::getSessionsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sessions',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_gettagsbysession' => array (  0 =>   array (    0 => 'id',    1 => 'id_session',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::getTagsBySessionAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tags',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_session',    ),    2 =>     array (      0 => 'text',      1 => '/sessions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_addsessiontag' => array (  0 =>   array (    0 => 'id',    1 => 'id_session',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::addSessionTagAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tags',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_session',    ),    2 =>     array (      0 => 'text',      1 => '/sessions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_deletesessiontag' => array (  0 =>   array (    0 => 'id',    1 => 'id_session',    2 => 'idTag',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::deleteSessionTagAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idTag',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_session',    ),    3 =>     array (      0 => 'text',      1 => '/sessions',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_demo_sessionrest_getlastecoute' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\SessionRestController::getLastEcouteAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session/end',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_add_token_ecoute' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\EcouteRestController::addEcouteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/ecoute',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_token_sessions' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\EcouteRestController::getSessionsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/ecoute',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_add_token_interaction' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\InteractionRestController::addInteractionAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/interaction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_notes_get_note_artiste' => array (  0 =>   array (    0 => 'idArtiste',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\NoteRestController::getNoteArtisteAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idArtiste',    ),    2 =>     array (      0 => 'text',      1 => '/note/artiste',    ),  ),  4 =>   array (  ),),
        'byexample_notes_get_note_item' => array (  0 =>   array (    0 => 'idItem',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\NoteRestController::getNoteItemAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'idItem',    ),    2 =>     array (      0 => 'text',      1 => '/note/item',    ),  ),  4 =>   array (  ),),
        'byexample_items_add_token_action' => array (  0 =>   array (    0 => 'id',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ActionRestController::addActionAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/action',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_items_get_token_actions' => array (  0 =>   array (    0 => 'id',    1 => 'iditem',    2 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\DemoBundle\\Controller\\ActionRestController::getActionsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'iditem',    ),    2 =>     array (      0 => 'text',      1 => '/actions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_algorithm_update_algorithm' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\AlgorithmController::updateAlgorithmAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/algorithms',    ),  ),  4 =>   array (  ),),
        'byexample_algorithm_get_algorithms' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\AlgorithmController::getAlgorithmsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/algorithms',    ),  ),  4 =>   array (  ),),
        'byexample_test_get_tests' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\TestController::getTestsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tests',    ),  ),  4 =>   array (  ),),
        'byexample_test_get_current_test' => array (  0 =>   array (    0 => 'iduser',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\TestController::getCurrentTestAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'iduser',    ),    2 =>     array (      0 => 'text',      1 => '/tests/current',    ),  ),  4 =>   array (  ),),
        'byexample_test_get_verify_group' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\TestController::getVerifyGroupAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/groups/verify',    ),  ),  4 =>   array (  ),),
        'byexample_test_post_test' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\TestController::postTestAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tests',    ),  ),  4 =>   array (  ),),
        'byexample_test_get_end_test' => array (  0 =>   array (    0 => 'idtest',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\TestController::getEndTestAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/end',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idtest',    ),    3 =>     array (      0 => 'text',      1 => '/tests',    ),  ),  4 =>   array (  ),),
        'byexample_recommandation_get_recommandation' => array (  0 =>   array (    0 => 'iduser',    1 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\RecommandationController::getRecommandationAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/recommandations',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iduser',    ),    3 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),),
        'byexample_recommandation_get_recommandations' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'ByExample\\RecommandationsBundle\\Controller\\RecommandationController::getRecommandationsAction',    '_format' => NULL,  ),  2 =>   array (    '_format' => 'json|xml|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/recommandations',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
